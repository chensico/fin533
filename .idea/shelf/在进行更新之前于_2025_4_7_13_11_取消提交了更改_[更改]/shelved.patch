Index: docs/search.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[\r\n  {\r\n    \"objectID\": \"index.html\",\r\n    \"href\": \"index.html\",\r\n    \"title\": \"Buylowsellsmart\",\r\n    \"section\": \"\",\r\n    \"text\": \"This is a Quarto website. Sichong Chen1.\\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\"\r\n  },\r\n  {\r\n    \"objectID\": \"about.html\",\r\n    \"href\": \"about.html\",\r\n    \"title\": \"About\",\r\n    \"section\": \"\",\r\n    \"text\": \"About this site\"\r\n  }\r\n]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docs/search.json b/docs/search.json
--- a/docs/search.json	(revision e17268d3ca4daf7486051b946e69d100e4307ff4)
+++ b/docs/search.json	(date 1744056675359)
@@ -4,7 +4,7 @@
     "href": "index.html",
     "title": "Buylowsellsmart",
     "section": "",
-    "text": "This is a Quarto website. Sichong Chen1.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
+    "text": "This is a Quarto website. Sichong Chen123.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
   },
   {
     "objectID": "about.html",
Index: docs/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\"><head>\r\n\r\n<meta charset=\"utf-8\">\r\n<meta name=\"generator\" content=\"quarto-1.6.42\">\r\n\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\r\n\r\n\r\n<title>Buylowsellsmart</title>\r\n<style>\r\ncode{white-space: pre-wrap;}\r\nspan.smallcaps{font-variant: small-caps;}\r\ndiv.columns{display: flex; gap: min(4vw, 1.5em);}\r\ndiv.column{flex: auto; overflow-x: auto;}\r\ndiv.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\r\nul.task-list{list-style: none;}\r\nul.task-list li input[type=\"checkbox\"] {\r\n  width: 0.8em;\r\n  margin: 0 0.8em 0.2em -1em; /* quarto-specific, see https://github.com/quarto-dev/quarto-cli/issues/4556 */ \r\n  vertical-align: middle;\r\n}\r\n</style>\r\n\r\n\r\n<script src=\"site_libs/quarto-nav/quarto-nav.js\"></script>\r\n<script src=\"site_libs/quarto-nav/headroom.min.js\"></script>\r\n<script src=\"site_libs/clipboard/clipboard.min.js\"></script>\r\n<script src=\"site_libs/quarto-search/autocomplete.umd.js\"></script>\r\n<script src=\"site_libs/quarto-search/fuse.min.js\"></script>\r\n<script src=\"site_libs/quarto-search/quarto-search.js\"></script>\r\n<meta name=\"quarto:offset\" content=\"./\">\r\n<script src=\"site_libs/quarto-html/quarto.js\"></script>\r\n<script src=\"site_libs/quarto-html/popper.min.js\"></script>\r\n<script src=\"site_libs/quarto-html/tippy.umd.min.js\"></script>\r\n<script src=\"site_libs/quarto-html/anchor.min.js\"></script>\r\n<link href=\"site_libs/quarto-html/tippy.css\" rel=\"stylesheet\">\r\n<link href=\"site_libs/quarto-html/quarto-syntax-highlighting-2f5df379a58b258e96c21c0638c20c03.css\" rel=\"stylesheet\" id=\"quarto-text-highlighting-styles\">\r\n<script src=\"site_libs/bootstrap/bootstrap.min.js\"></script>\r\n<link href=\"site_libs/bootstrap/bootstrap-icons.css\" rel=\"stylesheet\">\r\n<link href=\"site_libs/bootstrap/bootstrap-ddd961a2510921635943dfbbd19534c4.min.css\" rel=\"stylesheet\" append-hash=\"true\" id=\"quarto-bootstrap\" data-mode=\"light\">\r\n<script id=\"quarto-search-options\" type=\"application/json\">{\r\n  \"location\": \"navbar\",\r\n  \"copy-button\": false,\r\n  \"collapse-after\": 3,\r\n  \"panel-placement\": \"end\",\r\n  \"type\": \"overlay\",\r\n  \"limit\": 50,\r\n  \"keyboard-shortcut\": [\r\n    \"f\",\r\n    \"/\",\r\n    \"s\"\r\n  ],\r\n  \"show-item-context\": false,\r\n  \"language\": {\r\n    \"search-no-results-text\": \"No results\",\r\n    \"search-matching-documents-text\": \"matching documents\",\r\n    \"search-copy-link-title\": \"Copy link to search\",\r\n    \"search-hide-matches-text\": \"Hide additional matches\",\r\n    \"search-more-match-text\": \"more match in this document\",\r\n    \"search-more-matches-text\": \"more matches in this document\",\r\n    \"search-clear-button-title\": \"Clear\",\r\n    \"search-text-placeholder\": \"\",\r\n    \"search-detached-cancel-button-title\": \"Cancel\",\r\n    \"search-submit-button-title\": \"Submit\",\r\n    \"search-label\": \"Search\"\r\n  }\r\n}</script>\r\n\r\n\r\n<link rel=\"stylesheet\" href=\"styles.css\">\r\n</head>\r\n\r\n<body class=\"nav-fixed\">\r\n\r\n<div id=\"quarto-search-results\"></div>\r\n  <header id=\"quarto-header\" class=\"headroom fixed-top\">\r\n    <nav class=\"navbar navbar-expand-lg \" data-bs-theme=\"dark\">\r\n      <div class=\"navbar-container container-fluid\">\r\n      <div class=\"navbar-brand-container mx-auto\">\r\n    <a class=\"navbar-brand\" href=\"./index.html\">\r\n    <span class=\"navbar-title\">Buylowsellsmart</span>\r\n    </a>\r\n  </div>\r\n            <div id=\"quarto-search\" class=\"\" title=\"Search\"></div>\r\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" role=\"menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" onclick=\"if (window.quartoToggleHeadroom) { window.quartoToggleHeadroom(); }\">\r\n  <span class=\"navbar-toggler-icon\"></span>\r\n</button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n            <ul class=\"navbar-nav navbar-nav-scroll me-auto\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" href=\"./index.html\" aria-current=\"page\"> \r\n<span class=\"menu-text\">Home</span></a>\r\n  </li>  \r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"./about.html\"> \r\n<span class=\"menu-text\">About</span></a>\r\n  </li>  \r\n</ul>\r\n          </div> <!-- /navcollapse -->\r\n            <div class=\"quarto-navbar-tools\">\r\n</div>\r\n      </div> <!-- /container-fluid -->\r\n    </nav>\r\n</header>\r\n<!-- content -->\r\n<div id=\"quarto-content\" class=\"quarto-container page-columns page-rows-contents page-layout-article page-navbar\">\r\n<!-- sidebar -->\r\n<!-- margin-sidebar -->\r\n    <div id=\"quarto-margin-sidebar\" class=\"sidebar margin-sidebar zindex-bottom\">\r\n        \r\n    </div>\r\n<!-- main -->\r\n<main class=\"content\" id=\"quarto-document-content\">\r\n\r\n<header id=\"title-block-header\" class=\"quarto-title-block default\">\r\n<div class=\"quarto-title\">\r\n<h1 class=\"title\">Buylowsellsmart</h1>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"quarto-title-meta\">\r\n\r\n    \r\n  \r\n    \r\n  </div>\r\n  \r\n\r\n\r\n</header>\r\n\r\n\r\n<p>This is a Quarto website. Sichong Chen1.</p>\r\n<p>To learn more about Quarto websites visit <a href=\"https://quarto.org/docs/websites\" class=\"uri\">https://quarto.org/docs/websites</a>.</p>\r\n\r\n\r\n\r\n</main> <!-- /main -->\r\n<script id=\"quarto-html-after-body\" type=\"application/javascript\">\r\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\r\n  const toggleBodyColorMode = (bsSheetEl) => {\r\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\r\n    const bodyEl = window.document.querySelector(\"body\");\r\n    if (mode === \"dark\") {\r\n      bodyEl.classList.add(\"quarto-dark\");\r\n      bodyEl.classList.remove(\"quarto-light\");\r\n    } else {\r\n      bodyEl.classList.add(\"quarto-light\");\r\n      bodyEl.classList.remove(\"quarto-dark\");\r\n    }\r\n  }\r\n  const toggleBodyColorPrimary = () => {\r\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\r\n    if (bsSheetEl) {\r\n      toggleBodyColorMode(bsSheetEl);\r\n    }\r\n  }\r\n  toggleBodyColorPrimary();  \r\n  const icon = \"\uE9CB\";\r\n  const anchorJS = new window.AnchorJS();\r\n  anchorJS.options = {\r\n    placement: 'right',\r\n    icon: icon\r\n  };\r\n  anchorJS.add('.anchored');\r\n  const isCodeAnnotation = (el) => {\r\n    for (const clz of el.classList) {\r\n      if (clz.startsWith('code-annotation-')) {                     \r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const onCopySuccess = function(e) {\r\n    // button target\r\n    const button = e.trigger;\r\n    // don't keep focus\r\n    button.blur();\r\n    // flash \"checked\"\r\n    button.classList.add('code-copy-button-checked');\r\n    var currentTitle = button.getAttribute(\"title\");\r\n    button.setAttribute(\"title\", \"Copied!\");\r\n    let tooltip;\r\n    if (window.bootstrap) {\r\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\r\n      button.setAttribute(\"data-bs-placement\", \"left\");\r\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\r\n      tooltip = new bootstrap.Tooltip(button, \r\n        { trigger: \"manual\", \r\n          customClass: \"code-copy-button-tooltip\",\r\n          offset: [0, -8]});\r\n      tooltip.show();    \r\n    }\r\n    setTimeout(function() {\r\n      if (tooltip) {\r\n        tooltip.hide();\r\n        button.removeAttribute(\"data-bs-title\");\r\n        button.removeAttribute(\"data-bs-toggle\");\r\n        button.removeAttribute(\"data-bs-placement\");\r\n      }\r\n      button.setAttribute(\"title\", currentTitle);\r\n      button.classList.remove('code-copy-button-checked');\r\n    }, 1000);\r\n    // clear code selection\r\n    e.clearSelection();\r\n  }\r\n  const getTextToCopy = function(trigger) {\r\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\r\n      for (const childEl of codeEl.children) {\r\n        if (isCodeAnnotation(childEl)) {\r\n          childEl.remove();\r\n        }\r\n      }\r\n      return codeEl.innerText;\r\n  }\r\n  const clipboard = new window.ClipboardJS('.code-copy-button:not([data-in-quarto-modal])', {\r\n    text: getTextToCopy\r\n  });\r\n  clipboard.on('success', onCopySuccess);\r\n  if (window.document.getElementById('quarto-embedded-source-code-modal')) {\r\n    const clipboardModal = new window.ClipboardJS('.code-copy-button[data-in-quarto-modal]', {\r\n      text: getTextToCopy,\r\n      container: window.document.getElementById('quarto-embedded-source-code-modal')\r\n    });\r\n    clipboardModal.on('success', onCopySuccess);\r\n  }\r\n    var localhostRegex = new RegExp(/^(?:http|https):\\/\\/localhost\\:?[0-9]*\\//);\r\n    var mailtoRegex = new RegExp(/^mailto:/);\r\n      var filterRegex = new RegExp('/' + window.location.host + '/');\r\n    var isInternal = (href) => {\r\n        return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);\r\n    }\r\n    // Inspect non-navigation links and adorn them if external\r\n \tvar links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)');\r\n    for (var i=0; i<links.length; i++) {\r\n      const link = links[i];\r\n      if (!isInternal(link.href)) {\r\n        // undo the damage that might have been done by quarto-nav.js in the case of\r\n        // links that we want to consider external\r\n        if (link.dataset.originalHref !== undefined) {\r\n          link.href = link.dataset.originalHref;\r\n        }\r\n      }\r\n    }\r\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\r\n    const config = {\r\n      allowHTML: true,\r\n      maxWidth: 500,\r\n      delay: 100,\r\n      arrow: false,\r\n      appendTo: function(el) {\r\n          return el.parentElement;\r\n      },\r\n      interactive: true,\r\n      interactiveBorder: 10,\r\n      theme: 'quarto',\r\n      placement: 'bottom-start',\r\n    };\r\n    if (contentFn) {\r\n      config.content = contentFn;\r\n    }\r\n    if (onTriggerFn) {\r\n      config.onTrigger = onTriggerFn;\r\n    }\r\n    if (onUntriggerFn) {\r\n      config.onUntrigger = onUntriggerFn;\r\n    }\r\n    window.tippy(el, config); \r\n  }\r\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\r\n  for (var i=0; i<noterefs.length; i++) {\r\n    const ref = noterefs[i];\r\n    tippyHover(ref, function() {\r\n      // use id or data attribute instead here\r\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\r\n      try { href = new URL(href).hash; } catch {}\r\n      const id = href.replace(/^#\\/?/, \"\");\r\n      const note = window.document.getElementById(id);\r\n      if (note) {\r\n        return note.innerHTML;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    });\r\n  }\r\n  const xrefs = window.document.querySelectorAll('a.quarto-xref');\r\n  const processXRef = (id, note) => {\r\n    // Strip column container classes\r\n    const stripColumnClz = (el) => {\r\n      el.classList.remove(\"page-full\", \"page-columns\");\r\n      if (el.children) {\r\n        for (const child of el.children) {\r\n          stripColumnClz(child);\r\n        }\r\n      }\r\n    }\r\n    stripColumnClz(note)\r\n    if (id === null || id.startsWith('sec-')) {\r\n      // Special case sections, only their first couple elements\r\n      const container = document.createElement(\"div\");\r\n      if (note.children && note.children.length > 2) {\r\n        container.appendChild(note.children[0].cloneNode(true));\r\n        for (let i = 1; i < note.children.length; i++) {\r\n          const child = note.children[i];\r\n          if (child.tagName === \"P\" && child.innerText === \"\") {\r\n            continue;\r\n          } else {\r\n            container.appendChild(child.cloneNode(true));\r\n            break;\r\n          }\r\n        }\r\n        if (window.Quarto?.typesetMath) {\r\n          window.Quarto.typesetMath(container);\r\n        }\r\n        return container.innerHTML\r\n      } else {\r\n        if (window.Quarto?.typesetMath) {\r\n          window.Quarto.typesetMath(note);\r\n        }\r\n        return note.innerHTML;\r\n      }\r\n    } else {\r\n      // Remove any anchor links if they are present\r\n      const anchorLink = note.querySelector('a.anchorjs-link');\r\n      if (anchorLink) {\r\n        anchorLink.remove();\r\n      }\r\n      if (window.Quarto?.typesetMath) {\r\n        window.Quarto.typesetMath(note);\r\n      }\r\n      if (note.classList.contains(\"callout\")) {\r\n        return note.outerHTML;\r\n      } else {\r\n        return note.innerHTML;\r\n      }\r\n    }\r\n  }\r\n  for (var i=0; i<xrefs.length; i++) {\r\n    const xref = xrefs[i];\r\n    tippyHover(xref, undefined, function(instance) {\r\n      instance.disable();\r\n      let url = xref.getAttribute('href');\r\n      let hash = undefined; \r\n      if (url.startsWith('#')) {\r\n        hash = url;\r\n      } else {\r\n        try { hash = new URL(url).hash; } catch {}\r\n      }\r\n      if (hash) {\r\n        const id = hash.replace(/^#\\/?/, \"\");\r\n        const note = window.document.getElementById(id);\r\n        if (note !== null) {\r\n          try {\r\n            const html = processXRef(id, note.cloneNode(true));\r\n            instance.setContent(html);\r\n          } finally {\r\n            instance.enable();\r\n            instance.show();\r\n          }\r\n        } else {\r\n          // See if we can fetch this\r\n          fetch(url.split('#')[0])\r\n          .then(res => res.text())\r\n          .then(html => {\r\n            const parser = new DOMParser();\r\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\r\n            const note = htmlDoc.getElementById(id);\r\n            if (note !== null) {\r\n              const html = processXRef(id, note);\r\n              instance.setContent(html);\r\n            } \r\n          }).finally(() => {\r\n            instance.enable();\r\n            instance.show();\r\n          });\r\n        }\r\n      } else {\r\n        // See if we can fetch a full url (with no hash to target)\r\n        // This is a special case and we should probably do some content thinning / targeting\r\n        fetch(url)\r\n        .then(res => res.text())\r\n        .then(html => {\r\n          const parser = new DOMParser();\r\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\r\n          const note = htmlDoc.querySelector('main.content');\r\n          if (note !== null) {\r\n            // This should only happen for chapter cross references\r\n            // (since there is no id in the URL)\r\n            // remove the first header\r\n            if (note.children.length > 0 && note.children[0].tagName === \"HEADER\") {\r\n              note.children[0].remove();\r\n            }\r\n            const html = processXRef(null, note);\r\n            instance.setContent(html);\r\n          } \r\n        }).finally(() => {\r\n          instance.enable();\r\n          instance.show();\r\n        });\r\n      }\r\n    }, function(instance) {\r\n    });\r\n  }\r\n      let selectedAnnoteEl;\r\n      const selectorForAnnotation = ( cell, annotation) => {\r\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\r\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\r\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\r\n        return selector;\r\n      }\r\n      const selectCodeLines = (annoteEl) => {\r\n        const doc = window.document;\r\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\r\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\r\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\r\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\r\n        const lineIds = lines.map((line) => {\r\n          return targetCell + \"-\" + line;\r\n        })\r\n        let top = null;\r\n        let height = null;\r\n        let parent = null;\r\n        if (lineIds.length > 0) {\r\n            //compute the position of the single el (top and bottom and make a div)\r\n            const el = window.document.getElementById(lineIds[0]);\r\n            top = el.offsetTop;\r\n            height = el.offsetHeight;\r\n            parent = el.parentElement.parentElement;\r\n          if (lineIds.length > 1) {\r\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\r\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\r\n            height = bottom - top;\r\n          }\r\n          if (top !== null && height !== null && parent !== null) {\r\n            // cook up a div (if necessary) and position it \r\n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\r\n            if (div === null) {\r\n              div = window.document.createElement(\"div\");\r\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\r\n              div.style.position = 'absolute';\r\n              parent.appendChild(div);\r\n            }\r\n            div.style.top = top - 2 + \"px\";\r\n            div.style.height = height + 4 + \"px\";\r\n            div.style.left = 0;\r\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\r\n            if (gutterDiv === null) {\r\n              gutterDiv = window.document.createElement(\"div\");\r\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\r\n              gutterDiv.style.position = 'absolute';\r\n              const codeCell = window.document.getElementById(targetCell);\r\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\r\n              gutter.appendChild(gutterDiv);\r\n            }\r\n            gutterDiv.style.top = top - 2 + \"px\";\r\n            gutterDiv.style.height = height + 4 + \"px\";\r\n          }\r\n          selectedAnnoteEl = annoteEl;\r\n        }\r\n      };\r\n      const unselectCodeLines = () => {\r\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\r\n        elementsIds.forEach((elId) => {\r\n          const div = window.document.getElementById(elId);\r\n          if (div) {\r\n            div.remove();\r\n          }\r\n        });\r\n        selectedAnnoteEl = undefined;\r\n      };\r\n        // Handle positioning of the toggle\r\n    window.addEventListener(\r\n      \"resize\",\r\n      throttle(() => {\r\n        elRect = undefined;\r\n        if (selectedAnnoteEl) {\r\n          selectCodeLines(selectedAnnoteEl);\r\n        }\r\n      }, 10)\r\n    );\r\n    function throttle(fn, ms) {\r\n    let throttle = false;\r\n    let timer;\r\n      return (...args) => {\r\n        if(!throttle) { // first call gets through\r\n            fn.apply(this, args);\r\n            throttle = true;\r\n        } else { // all the others get throttled\r\n            if(timer) clearTimeout(timer); // cancel #2\r\n            timer = setTimeout(() => {\r\n              fn.apply(this, args);\r\n              timer = throttle = false;\r\n            }, ms);\r\n        }\r\n      };\r\n    }\r\n      // Attach click handler to the DT\r\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\r\n      for (const annoteDlNode of annoteDls) {\r\n        annoteDlNode.addEventListener('click', (event) => {\r\n          const clickedEl = event.target;\r\n          if (clickedEl !== selectedAnnoteEl) {\r\n            unselectCodeLines();\r\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\r\n            if (activeEl) {\r\n              activeEl.classList.remove('code-annotation-active');\r\n            }\r\n            selectCodeLines(clickedEl);\r\n            clickedEl.classList.add('code-annotation-active');\r\n          } else {\r\n            // Unselect the line\r\n            unselectCodeLines();\r\n            clickedEl.classList.remove('code-annotation-active');\r\n          }\r\n        });\r\n      }\r\n  const findCites = (el) => {\r\n    const parentEl = el.parentElement;\r\n    if (parentEl) {\r\n      const cites = parentEl.dataset.cites;\r\n      if (cites) {\r\n        return {\r\n          el,\r\n          cites: cites.split(' ')\r\n        };\r\n      } else {\r\n        return findCites(el.parentElement)\r\n      }\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\r\n  for (var i=0; i<bibliorefs.length; i++) {\r\n    const ref = bibliorefs[i];\r\n    const citeInfo = findCites(ref);\r\n    if (citeInfo) {\r\n      tippyHover(citeInfo.el, function() {\r\n        var popup = window.document.createElement('div');\r\n        citeInfo.cites.forEach(function(cite) {\r\n          var citeDiv = window.document.createElement('div');\r\n          citeDiv.classList.add('hanging-indent');\r\n          citeDiv.classList.add('csl-entry');\r\n          var biblioDiv = window.document.getElementById('ref-' + cite);\r\n          if (biblioDiv) {\r\n            citeDiv.innerHTML = biblioDiv.innerHTML;\r\n          }\r\n          popup.appendChild(citeDiv);\r\n        });\r\n        return popup.innerHTML;\r\n      });\r\n    }\r\n  }\r\n});\r\n</script>\r\n</div> <!-- /content -->\r\n\r\n\r\n\r\n\r\n</body></html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docs/index.html b/docs/index.html
--- a/docs/index.html	(revision e17268d3ca4daf7486051b946e69d100e4307ff4)
+++ b/docs/index.html	(date 1744056675296)
@@ -132,7 +132,7 @@
 </header>
 
 
-<p>This is a Quarto website. Sichong Chen1.</p>
+<p>This is a Quarto website. Sichong Chen123.</p>
 <p>To learn more about Quarto websites visit <a href="https://quarto.org/docs/websites" class="uri">https://quarto.org/docs/websites</a>.</p>
 
 
